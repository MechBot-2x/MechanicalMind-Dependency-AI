name: Mantenimiento y Monitoreo de Runners
on:
  schedule:
    - cron: '0 3 * * *'  # Ejecución diaria a las 3 AM UTC
  workflow_dispatch:     # Permite ejecución manual

jobs:
  cleanup:
    name: Limpieza de Runners Inactivos
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Limpiar runners offline
        uses: actions/cleanup-action@v3  # Versión actualizada
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          remove-token: ${{ secrets.GITHUB_TOKEN }}
          exclude-running: true    # No eliminar runners en uso
          min-age-days: 1          # Solo runners inactivos >1 día
          dry-run: false           # Cambiar a true para modo prueba

  health-check:
    name: Verificación de Salud
    needs: cleanup
    runs-on: ubuntu-latest
    steps:
      - name: Verificar recursos del sistema
        run: |
          echo "::group::Estado del Sistema"
          echo "Fecha: $(date)"
          echo "Versión del Runner: ${{ runner.version }}"
          echo "Sistema Operativo: ${{ runner.os }}"
          echo "::endgroup::"
          
          echo "::group::Uso de Disco"
          df -h
          echo "::endgroup::"
          
          echo "::group::Memoria"
          free -m
          echo "::endgroup::"
          
          echo "::group::CPU"
          nproc
          lscpu | grep "Model name"
          echo "::endgroup::"
          
      - name: Verificar estado de GitHub Actions
        run: |
          echo "::group::Estado del Servicio GitHub"
          curl -s https://www.githubstatus.com/api/v2/summary.json | \
            jq -r '.components[] | select(.name == "Actions") | "Status: \(.status)\nUpdated: \(.updated_at)"'
          echo "::endgroup::"
          
      - name: Verificar conexión con GitHub
        run: |
          echo "::group::Prueba de Conexión"
          curl -I https://api.github.com | grep HTTP
          echo "::endgroup::"
