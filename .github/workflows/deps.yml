name: Enhanced Dependency Scan with Security Checks

on:
  push:
    branches:  [main]
  pull_requests: wite
    branches: [main]

permissions:
  contents: write  # For pushing changes/fixes
  pull-requests: write  # For creating/updating PRs
  security-events: write  # For reporting security issues
  actions: read  # For workflow operations
  checks: write  # For creating check runs

jobs:
  dependency-scan:
    name: Dependency Scan & Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for full git context
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Dependency Scan
        id: dependency-scan
        uses: mechmind/ai-dependency-action@v3.0.1
        with:
          strict-mode: true
          auto-fix: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          scan-modules: true  # Enable module scanning
          output-format: 'sarif'  # For security reporting

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

      - name: Commit Auto-Fixes
        if: steps.dependency-scan.outputs.fixes_made == 'true'
        run: |
          git config --global user.name 'mechmind-dwv'
          git config --global user.email 'ia.mechmind@gmail.com'
          git add .
          git commit -m "Automated dependency fixes from scan"
          git push

      - name: Create Pull Request for Major Updates
        if: steps.dependency-scan.outputs.major_updates_available == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Dependency Updates: Major Version Changes'
          body: 'Automated PR for major dependency updates'
          branch: 'dependency-updates-$(date +%s)'

      - name: Report Scan Status
        run: |
          if [ "${{ steps.dependency-scan.outputs.issues_found }}" == "true" ]; then
            echo "::warning::Dependency issues found! Review scan results."
            echo "Consider creating an issue for tracking."
          else
            echo "Dependency scan completed successfully with no critical issues."
          fi
